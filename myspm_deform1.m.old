function myspm_deform1(EXP)
% EXP = myspm_deform1(EXP)
%
% EXP requires:
%  .name_moving
%  .name_def
%  .name_others
%
% (cc) 2015, sgKIM

spm('Defaults','fmri');
% this is SPM12-included batch process using SPM12
a=spm('version');
if ~strcmp(a(4:5),'12')
  error(['Run ',mfilename,' on SPM12!']);
end
if ~isfield(EXP,'prefix'), EXP.prefix='w'; end

[path1,~,~]= fileparts(EXP.name_moving);
if isempty(path1), path1=pwd; end
cd(path1);

if isfield(EXP,'name_moving')
  fnames={};
  if iscell(EXP.name_moving)
    j=1;
    for c=1:numel(EXP.name_moving)
      hdr = load_untouch_header_only(EXP.name_others{c});
      for t=1:hdr.dime.dim(5)
        fnames{j} = [EXP.name_moving{c},',',num2str(t)];
        j=j+1;
      end
    end
  else
    j=1;
    hdr = load_untouch_header_only(EXP.name_moving);
    for t=1:hdr.dime.dim(5)
      fnames{j} = [EXP.name_moving,',',num2str(t)];
      j=j+1;
    end
  end
end

% applying deformation to 'other' image?
normalise=[];
normalise.write.subj.def(1) = {fullfile(path1,EXP.name_def)};
normalise.write.subj.resample(1) = fnames;
normalise.write.woptions.bb = [-78 -112 -70; 78 76 85];
normalise.write.woptions.vox = [1 1 1]*EXP.vox_mm;
normalise.write.woptions.interp = 1; % cubic spline is better?
matlabbatch={};
matlabbatch{1}.spm.spatial.normalise = normalise;


save([path1,'/deform1.mat'], 'matlabbatch');
spm_jobman('initcfg');
spm_jobman('run', matlabbatch);
end